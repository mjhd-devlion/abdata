
	abdata モジュール ver.1.0
	
	・reamde(説明書) 兼 specification(仕様書)
	
＠概要
	HSP3のモジュール変数機能を用いて、コンテナを実装してみたモジュールです。
	
	C++のSTLを若干意識しています。全然相手になりませんが(こっちが)。
	
＠内容
	・コンテナ
		stack     : スタック
		queue     : キュー
		list      : リスト
		tree      : 木構造
		dlinklist : 双方向連結リスト
		pair      : ペア(双)
	
	・その他
		value     : 要素型
	
	以下は、内部で使用するモジュールです。
	
		dlinkvalue
		Moフォルダ内のファイル
	
	以下は、ネタです。
	
		argstack : サンプル中サンプルを参照
	
＠命名規則
	モジュール空間
		abdata_構造名
		
	メンバ命令・関数
		構造名_関数名
		
		・先頭は小文字。
		・LowerCamelCase (2単語目以降、先頭だけ大文字)。
		
	メンバ変数
		・接頭辞 m を用いる。
	
	＊内部の命名規則について
		モジュールごとに作成時期に差があるため、
		実装部分の命名規則は二転三転しています。
		現在修正作業中……？
	
＠統一関数(interface)
	全モジュールに含まれる、共通の機能があります。
	これにより、どのコンテナを選んでもだいたい同じような使い方が可能です。
	
	・構築
		new
		
		内部で newmod 命令を呼び出します。
		
	・解体
		delete
		
		内部で delmod 命令を呼び出します。
		
	・要素数
		size()
		
	・完全消去
		clear
		
		全要素を消去し、初期状態に戻します。呼び出し元の変数は解体されません。
		
	・複写
		copy 複写元
		
		@ 複写元の変数は破壊されません。
		
	・連結
		chain 連結元
		
		@! pair にはありません。
		
	・交換
		exchange 交換先
		
		2つのコンテナに格納されているすべての要素を交換します。
		要素に順番がある場合は、順番が守られます。
		@! swap ではありません。
	
	＊その他の関数について
		可能な限り、次のような語を使用しています。
		
		要素挿入 -> insert
		要素削除 -> remove
		要素移動 -> move
		要素交換 -> swap
		要素設定 -> set    ( 変数使用 : setv )
		要素取得 -> get    ( 命令形式 : getv )
		要素参照 -> dup    ( クローン変数の作成 )
		
＠繰返子関数(iterate)
	繰返子は、一般にはイテレータと呼ばれるモノです。音写した片仮名が嫌いな上大は
	勝手に「繰返子」と呼んでいますが。( 繰り返し、と掛けた駄洒落です。 )
	
	次のコンテナには、繰返子(iterator)を操作するための関数が用意されています。
	
		dlinklist
		tree      : 子ノードのみの繰り返し
		
	繰返子関数が実装されているコンテナでは、種類にかかわらず次のように使用します。
	
		構造名_iterNew [modvar]
		while( 構造名_iterCheck([modvar], [it]) )
			/* 処理 */
		wend
	
	まず、繰返子を作成する関数 iterNew を呼び出します。
	次に、while の条件に iterCheck() を使用します。この関数は、繰り返しが続く
	場合は 真 を返し、変数 [it] にその周回の値を代入します。繰り返しが既に完了
	している場合は 偽 を返し、繰返子を削除する関数 iterDelete を自動で呼び出し
	ます。このときの [it] の値は不定です。
	
	while ループの内部から強制的に脱出する場合は、iterDelete をスクリプトから
	明示的に呼び出す必要があります。
	
	※もっとうまく実装する方法があるなら、上大に教えてほしいです。
	
＠著作権
	このモジュールに含まれるすべてのファイルの著作権は作者にありますが、
	このモジュールの使用・改変・配布については、自由に誰でも行えるものとします。
	
＠サポート
	・プログラ広場(http://prograpark.ninja-web.net/)
		作者の上大とかーみが運営する、プログラミング関係のサイトです。
		意見・要望・バグ報告などは、ここの掲示板にどしどし寄せてください。
		過疎ってますが、週に２、３回以上はチェックしていますので。
		
	・上大へのメール
		アドレスを入手するHSP3スクリプト( 超スパム対策 )
			dim chr, 21
				chr( 0) = $75, $65, $64, $61, $69, $5F, $69, $64, $40, $79
				chr(10) = $61, $68, $6F, $6F, $2E, $63, $6F, $2E, $6A, $70, 0
			sdim s, 32
			foreach chr
				poke s, cnt, chr(cnt)
			loop
			objmode 2
			mesbox s, ginfo(12), 25
		;	exec "mailto:"+ s, 16	// メーラを起動
			stop
		
＠更新履歴 (開発視点)

＊2009 07/08 (Wed)
	・「＠繰返子関数」を追加。
	・この更新履歴を頑張って構築。
	・ver.1.0 として公開＆バックアップ。
	
＊2009 07/07 (Tue)
	・これ(readme)を作成し、abdata をフォルダ化 (前々からの悲願)。
	・すべてに統一関数を実装。同時に、統一的な命名規則を導入。
		new, delete, size, clear, copy, chain, exchange
	・木構造を、インスタンスすべてを1つの静的配列で管理するように再実装。
	
＊2009 05/10 (Sun)
	・キューをリストのラッパーとして再実装。
	
＊2009 05/05 (Tue) 〜 05/10の間
	・リストを作成。
	
＊2009 04/12 (Sun)
	・木構造を階層表現に対応させた。
	
＊2009 04/08 (Wed)
	・ペアを作成。
	
＊2008 10/13 (Mon)
	・双方向連結リストを作成。
	・木構造を作成。
	
＊2008 09/06 (Sat)
	・スタックとキューのファイルを分割。
	
＊不明 (2008 09/04 〜 09/06 か？)
	・スタック＋キューを作成 (StrCalc ver.1.00 に使用した、ハズ)。
	
Copyright(C) 2009 ue-dai.